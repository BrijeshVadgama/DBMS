USE DBMS;

CREATE TABLE DEPARTMENT
(
	DEPTID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	DNAME VARCHAR(50) NOT NULL,
	LOCATION VARCHAR(50) NOT NULL,
);

CREATE TABLE CITY
(
	CITYID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	CNAME VARCHAR(50) NOT NULL
);

CREATE TABLE STUDENT
(
	STUDENTID INT PRIMARY KEY IDENTITY(1,1) NOT NULL,
	STUDENTNAME VARCHAR(50) NOT NULL,
	SPI DECIMAL(4,2) CHECK(SPI BETWEEN 0 AND 10) NOT NULL,
	COLLAGENAME VARCHAR(50) NOT NULL,
	DPETID INT FOREIGN KEY REFERENCES DEPARTMENT(DEPTID),
	CITYID INT FOREIGN KEY REFERENCES CITY(CITYID)
);

------------------ [ INSERTING DATA ] ------------------

INSERT INTO DEPARTMENT VALUES
('CE','A-BLOCK'),
('ME','B-BLOCK'),
('IT','C-BLOCK'),
('BBA','E-BLOCK');

INSERT INTO CITY VALUES
('RAJKOT'),
('SURAT'),
('MORBI'),
('AHMEDABAD');

INSERT INTO STUDENT VALUES
('DEEP',9.5,'DARSHAN',1,1),
('MEET',9.8,'MARVADI',2,3),
('JAY',8.0,'ATMIYA',1,2),
('MIRAL',8.5,'RK',2,3),
('BHAVIN',7.5,'DARSHAN',3,1),
('AKSHAY',9.0,'MARVADI',3,2);

------------------ [ EXECUTE QUERY ] ------------------

-- 1) Display Student name ,SPI , department name and city
SELECT S.STUDENTNAME,S.SPI,D.DNAME,C.CNAME FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
INNER JOIN CITY C
ON C.CITYID=S.CITYID;

-- 2) Display list of student whose SPI grater than equal to 9
SELECT STUDENTNAME FROM STUDENT WHERE SPI>=9;

-- 3) Display name and city of student who lives in Rajkot
SELECT S.STUDENTNAME,C.CNAME FROM STUDENT S
INNER JOIN CITY C
ON S.CITYID=C.CITYID
WHERE C.CNAME='RAJKOT';

-- 4) Display department wise average SPI
SELECT D.DNAME,AVG(S.SPI) AS 'SPI' FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
GROUP BY D.DNAME;

-- 5) Display CE department student name and SPI
SELECT S.STUDENTNAME,S.SPI FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
WHERE D.DNAME='CE';

-- 6) Display student SPI in descending order
SELECT SPI FROM STUDENT ORDER BY SPI DESC;

-- 7) Count the Number of department 
SELECT COUNT(DISTINCT(DNAME)) AS 'DEPARTMENT' FROM DEPARTMENT;

-- 8) Count the number of student
SELECT COUNT(STUDENTID) AS 'STUDENT' FROM STUDENT;

-- 9) Display department wise average SPI
SELECT D.DNAME,AVG(S.SPI) AS 'SPI' FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
GROUP BY D.DNAME;

-- 10)Display maximum SPI from each department
SELECT D.DNAME,MAX(S.SPI) AS 'SPI' FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
GROUP BY D.DNAME;

-- 11) Update Student SPI of deep 9.5 to 9.6
UPDATE STUDENT SET SPI=9.6 WHERE STUDENTNAME='DEEP';
SELECT * FROM STUDENT;

-- 12) 10% increment in SPI of each student 
UPDATE STUDENT SET SPI=SPI+(SPI*10/100);

-- 13) Update city of meet to surat
-- UPDATE STUDENT SET CITYID=2 WHERE STUDENTNAME='MEET';
UPDATE STUDENT SET CITYID = (SELECT CITYID FROM CITY WHERE CNAME='SURAT')
WHERE STUDENTNAME='MEET';

SELECT * FROM STUDENT;

-- 14) Change name of Table Student to Student_Master
SP_RENAME 'STUDENT','STUDENT_MASTER';

-- 15) Add new column Backlog to student table
ALTER TABLE STUDENT
ADD BACKLOG INT;
SELECT * FROM STUDENT;

-- 16) Count number of collage
SELECT COUNT(DISTINCT(COLLAGENAME)) AS 'COLLEGE' FROM STUDENT;

-- 17)  Rename column SPI to CPI
SP_RENAME 'STUDENT.SPI','CPI';

-- 18) Display department wise average SPI of student whose Average SPI is more than 8.5
SELECT D.DNAME,AVG(S.SPI) AS 'SPI' FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
GROUP BY D.DNAME
HAVING AVG(S.SPI)>8.5;

-- 19) Display name of student which contain ee in their name
SELECT STUDENTNAME FROM STUDENT WHERE STUDENTNAME LIKE '%EE%';

-- 20) Display <Student name> from <city name> and is collage name is <collage name>
SELECT CONCAT(S.STUDENTNAME,' FROM ',C.CNAME,' AND IS COLLEGE NAME IS ',S.COLLAGENAME) AS 'STUDENT DETAILS' FROM STUDENT S
INNER JOIN CITY C
ON C.CITYID=S.CITYID;

-- 21) Count number of student from each city in each department
SELECT D.DNAME,C.CNAME,COUNT(S.STUDENTID) AS 'STUDENT' FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
INNER JOIN CITY C
ON C.CITYID=S.CITYID
GROUP BY D.DNAME,C.CNAME;

-- 22) Display first 3 letter of name of all students
SELECT LEFT(STUDENTNAME,3) AS 'STUDENT NAME' FROM STUDENT;

-- 23) Display lowest SPI in each city
SELECT C.CNAME,MIN(S.SPI) AS 'SPI' FROM STUDENT S
INNER JOIN CITY C
ON S.CITYID=C.CITYID
GROUP BY C.CNAME;

-- 24) Delete Student name whose start with M
DELETE FROM STUDENT WHERE STUDENTNAME LIKE 'M%';
SELECT * FROM STUDENT;

-- 25) Delete column backlog
ALTER TABLE STUDENT
DROP COLUMN BACKLOG;
SELECT * FROM STUDENT;

-- 26) Maximum , Minimum , Average SPI from IT department
SELECT MIN(S.SPI) AS 'MIN SPI',MAX(S.SPI) AS 'MAX SPI',AVG(S.SPI) AS 'AVG SPI' FROM STUDENT S
INNER JOIN DEPARTMENT D
ON D.DEPTID=S.DPETID
WHERE D.DNAME='IT';

-- 27) Display name of student which contain 4 letter and end with P
SELECT STUDENTNAME FROM STUDENT WHERE STUDENTNAME LIKE '_____%';

-- 28) Change Data type of name column to varchar(100)
ALTER TABLE STUDENT
ALTER COLUMN STUDENTNAME VARCHAR(100);

-- 29) Display Name of Student whose SPI is grater than 8 and contain 6 character only
SELECT STUDENTNAME FROM STUDENT 
WHERE STUDENTNAME LIKE '______' AND SPI>8;

-- 30) Display collage name in descending order and contain more than 4 character
SELECT DISTINCT(COLLAGENAME) FROM STUDENT
WHERE COLLAGENAME LIKE '_____%' 
ORDER BY COLLAGENAME DESC;